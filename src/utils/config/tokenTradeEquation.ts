import { PYTH_IDS_MAPPING } from './pythIds'

export const EQUATION_ARB_TOKEN = {
  '0xDE43a589Bc5b6136C4B7Ec24311D61713Cd5dF37': 'ETH',
  '0xd6394ac2E4B1AACbAE7E330F4e067E3f44e694E3': 'BTC',
  '0x5639CA22166bc9a952EAF555c85d3f471A14C428': 'SOL',
  '0x9738a52A95cd0320c28e5E433Ab8162F72dE5FF5': 'ARB',
  '0xE02f67D2dA6f1F6994439DE80beB9577EFd302B0': 'OP',
  '0x5d221A097cb3edb22A52Ce06F936C1424c694247': 'MATIC',
  '0x37eB0b14041A921edB5A0274685A657EBD7d930a': 'AVAX',
  '0x7d1eDB2701Bd0000e6cbf6919E91Ac8d629F6101': 'LINK',
  '0xe84B71ff869043ea3C23C847e1FB12c4828EeD21': 'ORDI',
  '0xbfBb9C494e4A5c0dbE01b2925D33aA4dA28e1699': 'DOGE',
  '0x7b9e0F2D2ac224D67Fd1D05D10CD28AD35b4C388': 'XRP',
  '0xdd29E5e4951010c90E47628aC43Db125f4710b1B': 'ADA',
  '0xDEe22fA17eC0E77462030707295D8EFAe9DeE79D': 'BNB',
  '0x0eBa9b7ffa224C4e52Ab9aa4e8da0F5B8e52a20a': 'LTC',
  '0x46E28473a9bf4dDa010A50b1AD59B85bF4C3bD6F': 'ETC',
  '0xd2a8fD72DC2f6D01c1Ac8a983338Eb1C2854Ae2a': 'FIL',
  '0xf3bD6d2779C922dF9ed269e75675ba6cA246EC9f': 'SUI',
  '0x4d10e50e34572409645A983cD732a71F6128b0Cd': 'TIA',
  '0x7C82d6900724db359995500854c4cc68814E8719': 'DOT',
  '0xDc6a256fce42e31a2C4Cc26CDb33eda8D2F5180c': 'BLUR',
  '0x23e1f92D36Bf87187F2B0d7Fc3CdDa643B1Cd1b7': 'INJ',
  '0x9516cc7c0f6eC8535b65ebc77aAeF32E91D6A819': 'SEI',
  '0x17c6Ce3159afdd318D1b457d483d8e891864c0e7': 'TRB',
  '0x4F56429D4c033003b9a8435B219023d47F326e57': 'ATOM',
  '0x407fE2878a3332eb0d7a6dcd071CA7293Df42ddf': 'APT',
  '0xe3444583ec8253e587a86E9857c61B9ee6AC81Fc': 'NEAR',
  '0xD985C774Acc9B741E3FaD01F39c0C10bCd44f7F5': 'LDO',
  '0x0f5f2842D353766376f0e708d815343A163b9C34': 'DYDX',
  '0xb44461D9a735366BC1680d0ec1D11A9BE07EBB06': 'MKR',
  '0xA3185AC5F655a2a93769fe83A63c82A192405A54': 'STX',
  '0x564abb6c574cC099335BBFEA904Fd060531b1795': 'FTM',
  '0x948f80d67b474c98E7e974B292fF2eD6Fcef2b60': 'RUNE',
  '0x7e98d1bCCcf83737636F8Df4aee590bEA8d78294': 'UNI',
  '0xDc5905A1C9D0468EEef40aac0aC63F0eE65854c8': 'CRV',
  '0xD020364b804f5aDeEB1f0Df9b76d08Ef9eF84C0C': '1000BONK',
  '0xBbCAbb621524eB4b9E42D7b1A9cCb76f5501973D': 'ENS',
  '0x64ec9E644a846c50A5F4F2d56c3E791CCc9d864d': 'AAVE',
  '0x32E8C41779fF521aE5688d0F31B32C138bCC85eC': '1000PEPE',
  '0xBb8Ce3EA75a356926cB11B79f532F959e06A673c': 'MINA',
  '0x23bb5325dD877e7512aF227093b2C3C7558F2bC7': 'JTO',
  '0x2D9eCC2179651dE7641E70752134de3e419De90a': 'RDNT',
  '0x474fC348aC17374d5da2E87dab4B8750A0167136': 'SUSHI',
  '0x986964c59F5294C283441059FBE72851E0A7fC8C': '1INCH',
  '0x949aC26bfaa638CA4A105aDe679D2fE3119E3BFe': 'SNX',
  '0xfd28c6F78b7F60a28DA6449919F72aB6696F51AE': 'PENDLE',
  '0xFE3Ee8021b789374b76e1388855617D5F8CD5BED': 'NTRN',
  '0xa84Ffb92ebbc130a864f7e17f5114A5B38E2C4AF': 'PYTH',
  '0xd918EBc69a74341a647e2919D732A7dd20bA8574': 'GMX',
}

type TokenValues = Record<
  string,
  {
    address: string
    name: string
    symbol: string
    decimals: number
    priceFeedId: string
  }
>

export const TOKEN_TRADE_EQUATION_ARB = Object.entries(EQUATION_ARB_TOKEN).reduce((result, [key, value]) => {
  return {
    ...result,
    [key]: {
      address: key,
      name: value,
      symbol: value,
      decimals: 18,
      priceFeedId: PYTH_IDS_MAPPING[value as keyof typeof PYTH_IDS_MAPPING] ?? '',
    },
  }
}, {} as TokenValues)
